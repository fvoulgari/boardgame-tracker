events {
    worker_connections 1024; # Set a limit for concurrent connections per worker
}

http {
    upstream game_service {
        server game-service:3002; # Name of the game service
    }

    upstream session_service {
        server session-service:3003; # Name of the session service
    }

    upstream user_service {
        server user-service:3001; # Name of the user service
    }

    server {
        listen 80;

        # Route for game-service
        location /api/games {
            proxy_pass http://game_service; # Forward to the game service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route for session-service
        location /api/sessions {
            proxy_pass http://session_service; # Forward to the session service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route for user-service
        location /api/users {
            proxy_pass http://user_service; # Forward to the user service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
